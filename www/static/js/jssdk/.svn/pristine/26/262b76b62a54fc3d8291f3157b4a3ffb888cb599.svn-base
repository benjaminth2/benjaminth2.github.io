var DbUtil = {};
DbUtil.key = "encrypted";

DbUtil.queryAllQrCodeData = function (windowObj, cbfn) {
  if (windowObj) {
    var cordova = windowObj.cordova;
    if (cordova) {
      var platformId = cordova.platformId;
      if (platformId) {
        if (platformId == "android") {
          DbUtil.queryAllQrCodeData_(
            windowObj,
            function (rs) {
              var data = JSON.stringify(rs.rows);
              var str = "Record count (expected to be n): " + data;
              windowObj.app.showDataFn(windowObj, str);
              if (cbfn) {
                //windowObj.app.showDataFn(windowObj,typeof(rs.rows.item(0)))
                cbfn(data);
              }
            },
            function (err) {
              windowObj.app.showDataFn(err);
            }
          );
        } else {
          var querySql = "select * from qrcode";

          DbUtil.doQuery(windowObj, querySql, [], function (rs) {
            var data = JSON.stringify(rs.rows);
            var str = "Record count (expected to be n): " + data;
            windowObj.app.showDataFn(windowObj, str);
            if (cbfn) {
              //windowObj.app.showDataFn(windowObj,typeof(rs.rows.item(0)))
              cbfn(data);
            }
          });
        }
      }
    }
  }
};
DbUtil.queryOneQrCodeData = function (windowObj, id, cbfn) {
  windowObj.app.showDataFn("11111");
  if (windowObj) {
    var cordova = windowObj.cordova;
    if (cordova) {
      var platformId = cordova.platformId;
      if (platformId) {
        if (platformId == "android") {
          windowObj.app.showDataFn("11112");
          DbUtil.queryOneQrCodeData_(
            windowObj,
            id,
            function (rs) {
              windowObj.app.showDataFn("11113");
              if (rs) {
                var data = rs.rows;

                if (cbfn) {
                  //windowObj.app.showDataFn(windowObj,typeof(rs.rows.item(0)))
                  cbfn(data);
                }
              }
            },
            function (err) {
              windowObj.app.showDataFn(err);
            }
          );
        } else {
          var querySql = "select * from qrcode where id=?";

          DbUtil.doQuery(windowObj, querySql, [id], function (rs) {
            var data = JSON.stringify(rs.rows);
            var str = "Record count (expected to be n): " + data;
            windowObj.app.showDataFn(windowObj, str);
            if (cbfn) {
              //windowObj.app.showDataFn(windowObj,typeof(rs.rows.item(0)))
              cbfn(data);
            }
          });
        }
      }
    }
  }
};

DbUtil.updateAllowSearch = function (windowObj, qrCodeId, cbfn) {
  var qrCodeIds = [];
  if (windowObj) {
    var cordova = windowObj.cordova;
    if (cordova) {
      var platformId = cordova.platformId;

      if (platformId) {
        if (platformId == "android") {
          DbUtil.updateAllowSearch_(
            windowObj,
            qrCodeId,
            function (res) {
              if (res) {
                var resData = JSON.parse(data);
                if (resData) {
                  if (resData.state == 0) {
                    qrCodeIds.push(parseInt(resData.data));
                  }
                }
              }
            },
            function (err) {
              windowObj.app.showDataFn(err);
            }
          );
        } else {
          var insertCallBackFn = function (rs) {
            if (res) {
              if (res.insertId) {
                qrCodeIds.push(res.insertId);
              }
            }
          };

          var querySql = "update qrcode set AllSearch=1 where id=?";

          var querySqlPrams = [];

          querySqlPrams.push(qrCodeId);

          DbUtil.doQuery(windowObj, querySql, querySqlPrams, insertCallBackFn);
        }
      }
    }
  }

  if (qrCodeIds.length > 0) {
    if (cbfn) {
      cbfn(qrCodeIds);
    }
  }
};

DbUtil.saveQrCodeData = function (windowObj, qrCodeProcessData, cbfn) {
  var this_ = this;
  var qrCodeIds = [];
  if (windowObj) {
    var cordova = windowObj.cordova;
    if (cordova) {
      var platformId = cordova.platformId;
      var buildMap = null;
      var BtnList = null;
      if (
        qrCodeProcessData &&
        Array.isArray(qrCodeProcessData) &&
        qrCodeProcessData.length > 0
      ) {
        var q = qrCodeProcessData[0];
        buildMap = q.Buildings[0];
        BtnList = q.BtnList;
      }

      if (platformId) {
        if (platformId == "android") {
          var i = 0;
          var insertOne = function (i) {
            const element = BtnList[i];

            var querySqlPrams = [];
            if (buildMap) {
              var qrSaveData = buildMap;
              qrSaveData.DevId = element;
              qrSaveData.AllowSearch = 0;
              DbUtil.saveQrCodeData_(
                windowObj,
                JSON.stringify(qrSaveData),
                insertCallBackFn,
                function (err) {
                  windowObj.app.showDataFn(err);
                }
              );
            }
          };
          var insertCallBackFn = function (res) {
            if (res) {
              var resData = JSON.parse(res);
              if (resData) {
                var state = resData.state;
                if (state == 0) {
                  windowObj.app.showDataFn("resData.data:" + resData.data);
                  windowObj.app.showDataFn(qrCodeIds.length);
                  qrCodeIds.push(resData.data);
                  windowObj.app.showDataFn(qrCodeIds.length);
                }
              }
              i = i + 1;
              if (i == BtnList.length) {
                //windowObj.app.showDataFn("1111")
                //windowObj.app.showDataFn(qrCodeIds.length)
                if (qrCodeIds.length > 0) {
                  //windowObj.app.showDataFn("1112")
                  if (cbfn) {
                    cbfn(qrCodeIds);
                  }
                }
              } else {
                insertOne(i);
              }
            }
          };
          insertOne(i);
        } else {
          var i = 0;
          var insertOne = function (i) {
            const element = BtnList[i];
            var querySql = "insert into qrcode values (?,?,?,?,?,?,?,?,?,?,?)";
            var querySqlPrams = [];
            if (buildMap) {
              const element = BtnList[index];

            var querySqlPrams = [];
            if (buildMap) {
              querySqlPrams.push(element);
              querySqlPrams.push(buildMap.Estate);
              querySqlPrams.push(buildMap.Building);
              querySqlPrams.push(buildMap.Machine);
              querySqlPrams.push(buildMap.Button);
              querySqlPrams.push(0);
              querySqlPrams.push(buildMap.OutPut);
            }

            DbUtil.doQuery(
              windowObj,
              querySql,
              querySqlPrams,
              insertCallBackFn
            );
            }
          };
          var insertCallBackFn = function (res) {
            if (res) {
              var resData = JSON.parse(res);
              if (resData) {
                var state = resData.state;
                if (state == 0) {
                  windowObj.app.showDataFn("resData.data:" + resData.data);
                  windowObj.app.showDataFn(qrCodeIds.length);
                  qrCodeIds.push(resData.data);
                  windowObj.app.showDataFn(qrCodeIds.length);
                }
              }
              i = i + 1;
              if (i == BtnList.length) {
                //windowObj.app.showDataFn("1111")
                //windowObj.app.showDataFn(qrCodeIds.length)
                if (qrCodeIds.length > 0) {
                  //windowObj.app.showDataFn("1112")
                  if (cbfn) {
                    cbfn(qrCodeIds);
                  }
                }
              } else {
                insertOne(i);
              }
            }
          };
          insertOne(i);

          

          
        }
      }
    }
  }
  windowObj.app.showDataFn("1111");
  windowObj.app.showDataFn(qrCodeIds.length);
  if (qrCodeIds.length > 0) {
    windowObj.app.showDataFn("1111");
    if (cbfn) {
      cbfn(qrCodeIds);
    }
  }
};
//just for ios
DbUtil.doQuery = function (windowObj, querySql, querySqlPrams, cbfn) {
  if (windowObj) {
    if (windowObj.sqlitePlugin) {
      var db = windowObj.sqlitePlugin.openDatabase({
        name: DbUtil.dbName,
        key: DbUtil.key,
        location: 0,
      });

      windowObj.app.showDataFn(windowObj, db != null);
      windowObj.app.showDataFn(windowObj, sql);
      db.executeSql(querySql, querySqlPrams, cbfn, function (error) {
        windowObj.app.showDataFn(windowObj, error);
      });
    }
  }
};

//just for android
DbUtil.saveQrCodeData_ = function (
  windowObj,
  qrSaveData,
  saveCallBack,
  saveErrorCallBack
) {
  if (windowObj) {
    var app = windowObj.app;
    if (app) {
      var DoorMasterSdkUtil = app.DoorMasterSdkUtil;
      if (DoorMasterSdkUtil) {
        var actionCode = "saveQrCodeData";
        DoorMasterSdkUtil.doJsAction(
          windowObj,
          actionCode,
          qrSaveData,
          saveCallBack,
          saveErrorCallBack
        );
      }
    }
  }
};
//just for android
DbUtil.queryAllQrCodeData_ = function (
  windowObj,
  queryCallBack,
  queryErrorCallBack
) {
  if (windowObj) {
    var app = windowObj.app;
    if (app) {
      var DoorMasterSdkUtil = app.DoorMasterSdkUtil;
      if (DoorMasterSdkUtil) {
        var actionCode = "queryAllQrCodeData";
        DoorMasterSdkUtil.doJsAction(
          windowObj,
          actionCode,
          "1111",
          queryCallBack,
          queryErrorCallBack
        );
      }
    }
  }
};
//just for android
DbUtil.queryOneQrCodeData_ = function (
  windowObj,
  qrCodeId,
  queryCallBack,
  queryErrorCallBack
) {
  if (windowObj) {
    var app = windowObj.app;
    if (app) {
      var DoorMasterSdkUtil = app.DoorMasterSdkUtil;
      if (DoorMasterSdkUtil) {
        var actionCode = "queryOneQrCodeData";
        DoorMasterSdkUtil.doJsAction(
          windowObj,
          actionCode,
          qrCodeId,
          queryCallBack,
          queryErrorCallBack
        );
      }
    }
  }
};
DbUtil.updateAllowSearch_ = function (
  windowObj,
  qrCodeId,
  queryCallBack,
  queryErrorCallBack
) {
  if (windowObj) {
    var app = windowObj.app;
    if (app) {
      var DoorMasterSdkUtil = app.DoorMasterSdkUtil;
      if (DoorMasterSdkUtil) {
        var actionCode = "updateAllowSearch";
        DoorMasterSdkUtil.doJsAction(
          windowObj,
          actionCode,
          qrCodeId,
          queryCallBack,
          queryErrorCallBack
        );
      }
    }
  }
};
